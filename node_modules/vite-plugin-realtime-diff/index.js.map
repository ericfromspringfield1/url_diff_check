{
  "version": 3,
  "sources": ["../src/index.ts", "../src/constants.ts", "../src/template.ts", "../src/utils.ts"],
  "sourcesContent": ["import { parse } from \"url\";\nimport { generateHtmlTemplate } from \"./template\";\nimport { getIframeWidth, isValidUrl } from \"./utils\";\nimport type { ViteDevServer } from \"vite\";\n\nexport function realtimeDiff(url2: string) {\n  return {\n    name: \"vite-plugin-realtime-diff\",\n    configureServer(server: ViteDevServer) {\n      server.middlewares.use((req, res, next) => {\n        if (!req.url) {\n          next();\n          return;\n        }\n\n        const { query } = parse(req.url, true);\n        let url1 = `http://${req.headers.host}${req.url}`;\n        const pathname = req.url as string;\n        url2 = new URL(url2).origin + pathname;\n\n        if (query._diff && query._diff === \"true\") {\n          // Remove the _diff query param from the URL\n          url1 = url1.replace(\"?_diff=true\", \"\");\n          url2 = url2.replace(\"?_diff=true\", \"\");\n\n          const widthKey = (query.width as string) || \"100%\";\n          const iframeWidth = getIframeWidth(widthKey);\n\n          if (!isValidUrl(url1) || !isValidUrl(url2)) {\n            res.statusCode = 400;\n            res.end(\"Please provide valid URLs in the plugin options.\");\n            return;\n          }\n\n          res.setHeader(\"Content-Type\", \"text/html\");\n          res.end(generateHtmlTemplate(url1, url2, iframeWidth, widthKey));\n        } else {\n          next();\n        }\n      });\n    },\n  };\n}\n", "import { DefaultWidths } from \"./types\";\n\nexport const defaultWidths: DefaultWidths = {\n  \"iphone-x\": \"375px\", // iPhone X width\n  \"2k\": \"2048px\", // 2K width\n  desktop: \"1920px\", // Desktop width\n  \"1080p\": \"1920px\", // 1080p width\n  \"720p\": \"1280px\", // 720p width\n  \"4k\": \"3840px\", // 4K width\n  \"100%\": \"100%\", // Default for custom width or unspecified width\n};\n", "import { defaultWidths } from \"./constants\";\n\n/**\n * Generates the HTML template for the diff view.\n * @param {string} url1 - The first URL to compare.\n * @param {string} url2 - The second URL to compare.\n * @param {string} iframeWidth - The width of the iframe.\n * @param {string} widthKey - The key for the selected width.\n * @return {string} The generated HTML string.\n */\nexport function generateHtmlTemplate(url1: string, url2: string, iframeWidth: string, widthKey: string) {\n  return `\n    <html>\n            <head>\n              <style>\n              body {\n                    margin: 0;\n                    background: black;\n              }\n                .iframe-container {\n                  position: relative;\n                  width: 100%;\n                  height: 15000px;\n                  overflow-y: scroll;\n                }\n                iframe {\n                  position: absolute;\n                  top: 0;\n                  left: 50%;\n                  transform: translateX(-50%);\n                  width: ${iframeWidth};\n                  height: 100%;\n                  border: none;\n                  pointer-events: none;\n                  overflow: hidden;\n                }\n                .overlay {\n                  mix-blend-mode: difference;\n                }\n                .width-form {\n                  position: fixed;\n                  top: 10px;\n                  left: 10px;\n                  z-index: 9999;\n                }\n              </style>\n            </head>\n            <body>\n            <form action=\"/_diff\" class=\"width-form\">\n                  <select name=\"width\" onchange=\"this.form.submit()\">\n                    ${Object.keys(defaultWidths)\n                      .map((key) => `<option value=\"${key}\" ${widthKey === key ? \"selected\" : \"\"}>${key}</option>`)\n                      .join(\"\")}\n                  </select>\n                </form>\n                <div class=\"iframe-container\">\n                        <iframe id=\"frame1\" src=\"${url1}\"></iframe>\n                        <iframe id=\"frame2\" src=\"${url2}\" class=\"overlay\"></iframe>\n                </div>\n            </body>\n          </html>\n    `;\n}\n", "import { defaultWidths } from \"./constants\";\n\n/**\n * Gets the width of the iframe.\n * @param {string} widthKey - The key for the selected width.\n * @param {Object} defaultWidths - The default widths object.\n * @return {string} The width of the iframe.\n */\nexport function getIframeWidth(widthKey: string) {\n  return defaultWidths[widthKey] || defaultWidths[\"100%\"];\n}\n\n/**\n * Checks if the URL is valid.\n * @param {string} url - The URL to check.\n * @return {boolean} Whether the URL is valid.\n */\nexport function isValidUrl(url: string) {\n  try {\n    new URL(url);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,kBAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAsB,eCEf,IAAMC,EAA+B,CAC1C,WAAY,QACZ,KAAM,SACN,QAAS,SACT,QAAS,SACT,OAAQ,SACR,KAAM,SACN,OAAQ,MACV,ECAO,SAASC,EAAqBC,EAAcC,EAAcC,EAAqBC,EAAkB,CACtG,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAmBkBD,CAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAoBhB,OAAO,KAAKE,CAAa,EACxB,IAAKC,GAAQ,kBAAkBA,CAAG,KAAKF,IAAaE,EAAM,WAAa,EAAE,IAAIA,CAAG,WAAW,EAC3F,KAAK,EAAE,CAAC;AAAA;AAAA;AAAA;AAAA,mDAIoBL,CAAI;AAAA,mDACJC,CAAI;AAAA;AAAA;AAAA;AAAA,KAKvD,CCtDO,SAASK,EAAeC,EAAkB,CAC/C,OAAOC,EAAcD,CAAQ,GAAKC,EAAc,MAAM,CACxD,CAOO,SAASC,EAAWC,EAAa,CACtC,GAAI,CACF,WAAI,IAAIA,CAAG,EACJ,EACT,MAAY,CACV,MAAO,EACT,CACF,CHnBO,SAASC,EAAaC,EAAc,CACzC,MAAO,CACL,KAAM,4BACN,gBAAgBC,EAAuB,CACrCA,EAAO,YAAY,IAAI,CAACC,EAAKC,EAAKC,IAAS,CACzC,GAAI,CAACF,EAAI,IAAK,CACZE,EAAK,EACL,MACF,CAEA,GAAM,CAAE,MAAAC,CAAM,KAAI,SAAMH,EAAI,IAAK,EAAI,EACjCI,EAAO,UAAUJ,EAAI,QAAQ,IAAI,GAAGA,EAAI,GAAG,GACzCK,EAAWL,EAAI,IAGrB,GAFAF,EAAO,IAAI,IAAIA,CAAI,EAAE,OAASO,EAE1BF,EAAM,OAASA,EAAM,QAAU,OAAQ,CAEzCC,EAAOA,EAAK,QAAQ,cAAe,EAAE,EACrCN,EAAOA,EAAK,QAAQ,cAAe,EAAE,EAErC,IAAMQ,EAAYH,EAAM,OAAoB,OACtCI,EAAcC,EAAeF,CAAQ,EAE3C,GAAI,CAACG,EAAWL,CAAI,GAAK,CAACK,EAAWX,CAAI,EAAG,CAC1CG,EAAI,WAAa,IACjBA,EAAI,IAAI,kDAAkD,EAC1D,MACF,CAEAA,EAAI,UAAU,eAAgB,WAAW,EACzCA,EAAI,IAAIS,EAAqBN,EAAMN,EAAMS,EAAaD,CAAQ,CAAC,CACjE,MACEJ,EAAK,CAET,CAAC,CACH,CACF,CACF",
  "names": ["src_exports", "__export", "realtimeDiff", "__toCommonJS", "import_url", "defaultWidths", "generateHtmlTemplate", "url1", "url2", "iframeWidth", "widthKey", "defaultWidths", "key", "getIframeWidth", "widthKey", "defaultWidths", "isValidUrl", "url", "realtimeDiff", "url2", "server", "req", "res", "next", "query", "url1", "pathname", "widthKey", "iframeWidth", "getIframeWidth", "isValidUrl", "generateHtmlTemplate"]
}
